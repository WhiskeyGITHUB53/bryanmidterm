{
  "version": 3,
  "sources": ["../../vuetify/src/framework.ts"],
  "sourcesContent": ["// Composables\nimport { createDefaults, DefaultsSymbol } from '@/composables/defaults'\nimport { createDisplay, DisplaySymbol } from '@/composables/display'\nimport { createIcons, IconSymbol } from '@/composables/icons'\nimport { createLocale, LocaleSymbol } from '@/composables/locale'\nimport { createTheme, ThemeSymbol } from '@/composables/theme'\n\n// Utilities\nimport { defineComponent, getUid, mergeDeep } from '@/util'\nimport { reactive } from 'vue'\n\n// Types\nimport type { App, ComponentPublicInstance, InjectionKey } from 'vue'\nimport type { DefaultsOptions } from '@/composables/defaults'\nimport type { DisplayOptions } from '@/composables/display'\nimport type { IconOptions } from '@/composables/icons'\nimport type { LocaleOptions, RtlOptions } from '@/composables/locale'\nimport type { ThemeOptions } from '@/composables/theme'\n\nexport * from './composables'\n\nexport interface VuetifyOptions {\n  aliases?: Record<string, any>\n  blueprint?: Blueprint\n  components?: Record<string, any>\n  directives?: Record<string, any>\n  defaults?: DefaultsOptions\n  display?: DisplayOptions\n  theme?: ThemeOptions\n  icons?: IconOptions\n  locale?: LocaleOptions & RtlOptions\n  ssr?: boolean\n}\n\nexport interface Blueprint extends Omit<VuetifyOptions, 'blueprint'> {}\n\nexport function createVuetify (vuetify: VuetifyOptions = {}) {\n  const { blueprint, ...rest } = vuetify\n  const options = mergeDeep(blueprint, rest)\n  const {\n    aliases = {},\n    components = {},\n    directives = {},\n  } = options\n\n  const defaults = createDefaults(options.defaults)\n  const display = createDisplay(options.display, options.ssr)\n  const theme = createTheme(options.theme)\n  const icons = createIcons(options.icons)\n  const locale = createLocale(options.locale)\n\n  const install = (app: App) => {\n    for (const key in directives) {\n      app.directive(key, directives[key])\n    }\n\n    for (const key in components) {\n      app.component(key, components[key])\n    }\n\n    for (const key in aliases) {\n      app.component(key, defineComponent({\n        ...aliases[key],\n        name: key,\n        aliasName: aliases[key].name,\n      }))\n    }\n\n    theme.install(app)\n\n    app.provide(DefaultsSymbol, defaults)\n    app.provide(DisplaySymbol, display)\n    app.provide(ThemeSymbol, theme)\n    app.provide(IconSymbol, icons)\n    app.provide(LocaleSymbol, locale)\n\n    getUid.reset()\n\n    app.mixin({\n      computed: {\n        $vuetify () {\n          return reactive({\n            defaults: inject.call(this, DefaultsSymbol),\n            display: inject.call(this, DisplaySymbol),\n            theme: inject.call(this, ThemeSymbol),\n            icons: inject.call(this, IconSymbol),\n            locale: inject.call(this, LocaleSymbol),\n          })\n        },\n      },\n    })\n  }\n\n  return {\n    install,\n    defaults,\n    display,\n    theme,\n    icons,\n    locale,\n  }\n}\n\nexport const version = __VUETIFY_VERSION__\ncreateVuetify.version = version\n\n// Vue's inject() can only be used in setup\nfunction inject (this: ComponentPublicInstance, key: InjectionKey<any> | string) {\n  const vm = this.$\n\n  const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides\n\n  if (provides && (key as any) in provides) {\n    return provides[(key as string)]\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCO,SAASA,gBAA6C;AAAA,MAA9BC,UAA8B,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,QAAM;IAAEC;OAAcC;EAAhB,IAAyBF;AAC/B,QAAMG,UAAUC,UAAUH,WAAWC,IAAZ;AACzB,QAAM;IACJG,UAAU,CAAA;IACVC,aAAa,CAAA;IACbC,aAAa,CAAA;EAHT,IAIFJ;AAEJ,QAAMK,WAAWC,eAAeN,QAAQK,QAAT;AAC/B,QAAME,UAAUC,cAAcR,QAAQO,SAASP,QAAQS,GAA1B;AAC7B,QAAMC,QAAQC,YAAYX,QAAQU,KAAT;AACzB,QAAME,QAAQC,YAAYb,QAAQY,KAAT;AACzB,QAAME,SAASC,aAAaf,QAAQc,MAAT;AAE3B,QAAME,UAAWC,SAAa;AAC5B,eAAWC,OAAOd,YAAY;AAC5Ba,UAAIE,UAAUD,KAAKd,WAAWc,IAA9B;IACD;AAED,eAAWA,OAAOf,YAAY;AAC5Bc,UAAIG,UAAUF,KAAKf,WAAWe,IAA9B;IACD;AAED,eAAWA,OAAOhB,SAAS;AACzBe,UAAIG,UAAUF,KAAKG,gBAAgB;QACjC,GAAGnB,QAAQgB;QACXI,MAAMJ;QACNK,WAAWrB,QAAQgB,KAAKI;MAHS,CAAD,CAAlC;IAKD;AAEDZ,UAAMM,QAAQC,GAAd;AAEAA,QAAIO,QAAQC,gBAAgBpB,QAA5B;AACAY,QAAIO,QAAQE,eAAenB,OAA3B;AACAU,QAAIO,QAAQG,aAAajB,KAAzB;AACAO,QAAIO,QAAQI,YAAYhB,KAAxB;AACAK,QAAIO,QAAQK,cAAcf,MAA1B;AAEAgB,WAAOC,MAAP;AAEAd,QAAIe,MAAM;MACRC,UAAU;QACRC,WAAY;AACV,iBAAOC,SAAS;YACd9B,UAAU+B,OAAOC,KAAK,MAAMZ,cAAlB;YACVlB,SAAS6B,OAAOC,KAAK,MAAMX,aAAlB;YACThB,OAAO0B,OAAOC,KAAK,MAAMV,WAAlB;YACPf,OAAOwB,OAAOC,KAAK,MAAMT,UAAlB;YACPd,QAAQsB,OAAOC,KAAK,MAAMR,YAAlB;UALM,CAAD;QAOhB;MATO;IADF,CAAV;EAaD;AAED,SAAO;IACLb;IACAX;IACAE;IACAG;IACAE;IACAE;EANK;AAQR;AAEM,IAAMwB,UAAO;AACpB1C,cAAc0C,UAAUA;AAGxB,SAASF,OAAuClB,KAAiC;AA3GjF;AA2GiF,MAAA,YAAA;AAC/E,QAAMqB,KAAK,KAAKC;AAEhB,QAAMC,YAAW,mBAAAF,GAAGG,WAAH,OAAA,SAAA,WAAWD,aAAX,aAAA,uBAAuBF,GAAGI,MAAMC,eAAhC,OAAA,SAAuB,qBAAqBH;AAE7D,MAAIA,YAAavB,OAAeuB,UAAU;AACxC,WAAOA,SAAUvB;EAClB;AACF;",
  "names": ["createVuetify", "vuetify", "blueprint", "rest", "options", "mergeDeep", "aliases", "components", "directives", "defaults", "createDefaults", "display", "createDisplay", "ssr", "theme", "createTheme", "icons", "createIcons", "locale", "createLocale", "install", "app", "key", "directive", "component", "defineComponent", "name", "aliasName", "provide", "DefaultsSymbol", "DisplaySymbol", "ThemeSymbol", "IconSymbol", "LocaleSymbol", "getUid", "reset", "mixin", "computed", "$vuetify", "reactive", "inject", "call", "version", "vm", "$", "provides", "parent", "vnode", "appContext"]
}
